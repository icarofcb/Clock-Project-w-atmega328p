
projeto_relogio.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000c5e  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  00000c5e  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00000c5e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  00000cb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001503  00000000  00000000  00000d89  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008d7  00000000  00000000  0000228c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000615  00000000  00000000  00002b63  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000021c  00000000  00000000  00003178  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000260  00000000  00000000  00003394  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000400  00000000  00000000  000035f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  000039f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000bc4  00000bc4  00000c58  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003a84  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.analogInit 0000000e  00000bac  00000bac  00000c40  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__vector_14 0000008a  0000082a  0000082a  000008be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.inverte_led 0000000a  00000bba  00000bba  00000c4e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__vector_11 000000ac  0000077e  0000077e  00000812  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.sec_to_time 000000e4  00000522  00000522  000005b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .progmemx.data 0000000f  000000c8  000000c8  0000015c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 20 .text.main    000000bc  00000606  00000606  0000069a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .bss.pastmills 00000004  00800106  00800106  00000c5e  2**0
                  ALLOC
 22 .bss.millis   00000004  0080010a  0080010a  00000c5e  2**0
                  ALLOC
 23 .data.start_flag 00000001  00800112  00000bc8  00000c5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss.seconds  00000004  0080010e  0080010e  00000c5e  2**0
                  ALLOC
 25 .text.TIM0_init 00000022  00000b22  00000b22  00000bb6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.TIM1_init 00000036  00000a4a  00000a4a  00000ade  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.__vector_20 0000001e  00000b44  00000b44  00000bd8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.USART_Init 00000016  00000b96  00000b96  00000c2a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.USART_Transmit 0000001a  00000b62  00000b62  00000bf6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.USART_SendString 00000036  00000a80  00000a80  00000b14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .progmemx.data 00000003  000000d7  000000d7  0000016b  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 32 .text.USART_SendInt 0000005c  0000092c  0000092c  000009c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .data.uart_tx_done 00000001  00800113  00000bc9  00000c5d  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 34 .text.libgcc.div 00000044  000009ce  000009ce  00000a62  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.libgcc  0000001a  00000b7c  00000b7c  00000c10  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.avrlibc 00000046  00000988  00000988  00000a1c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.avrlibc 00000448  000000da  000000da  0000016e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.avrlibc 00000036  00000ab6  00000ab6  00000b4a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.avrlibc 00000078  000008b4  000008b4  00000948  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.avrlibc 000000bc  000006c2  000006c2  00000756  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.libgcc.prologue 00000038  00000a12  00000a12  00000aa6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.libgcc.prologue 00000036  00000aec  00000aec  00000b80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
   8:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
   c:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  10:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  14:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  18:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  1c:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  20:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  24:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  28:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  2c:	0c 94 bf 03 	jmp	0x77e	; 0x77e <__vector_11>
  30:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  34:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  38:	0c 94 15 04 	jmp	0x82a	; 0x82a <__vector_14>
  3c:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  40:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  44:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  48:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  4c:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  50:	0c 94 a2 05 	jmp	0xb44	; 0xb44 <__vector_20>
  54:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  58:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  5c:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  60:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>
  64:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 12       	cpse	r0, r17
  6c:	80 01       	movw	r16, r0
  6e:	12 01       	movw	r2, r4
  70:	14 00       	.word	0x0014	; ????
  72:	0b c8       	rjmp	.-4074   	; 0xfffff08a <__eeprom_end+0xff7ef08a>

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf ef       	ldi	r28, 0xFF	; 255
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	e8 e6       	ldi	r30, 0x68	; 104
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	40 e0       	ldi	r20, 0x00	; 0
  86:	17 c0       	rjmp	.+46     	; 0xb6 <__do_clear_bss+0x8>
  88:	b5 91       	lpm	r27, Z+
  8a:	a5 91       	lpm	r26, Z+
  8c:	35 91       	lpm	r19, Z+
  8e:	25 91       	lpm	r18, Z+
  90:	05 91       	lpm	r16, Z+
  92:	07 fd       	sbrc	r16, 7
  94:	0c c0       	rjmp	.+24     	; 0xae <__do_clear_bss>
  96:	95 91       	lpm	r25, Z+
  98:	85 91       	lpm	r24, Z+
  9a:	ef 01       	movw	r28, r30
  9c:	f9 2f       	mov	r31, r25
  9e:	e8 2f       	mov	r30, r24
  a0:	05 90       	lpm	r0, Z+
  a2:	0d 92       	st	X+, r0
  a4:	a2 17       	cp	r26, r18
  a6:	b3 07       	cpc	r27, r19
  a8:	d9 f7       	brne	.-10     	; 0xa0 <__do_copy_data+0x20>
  aa:	fe 01       	movw	r30, r28
  ac:	04 c0       	rjmp	.+8      	; 0xb6 <__do_clear_bss+0x8>

000000ae <__do_clear_bss>:
  ae:	1d 92       	st	X+, r1
  b0:	a2 17       	cp	r26, r18
  b2:	b3 07       	cpc	r27, r19
  b4:	e1 f7       	brne	.-8      	; 0xae <__do_clear_bss>
  b6:	e4 37       	cpi	r30, 0x74	; 116
  b8:	f4 07       	cpc	r31, r20
  ba:	31 f7       	brne	.-52     	; 0x88 <__do_copy_data+0x8>
  bc:	0e 94 03 03 	call	0x606	; 0x606 <main>
  c0:	0c 94 62 00 	jmp	0xc4	; 0xc4 <_exit>

000000c4 <_exit>:
  c4:	f8 94       	cli

000000c6 <__stop_program>:
  c6:	ff cf       	rjmp	.-2      	; 0xc6 <__stop_program>

Disassembly of section .text:

00000bc4 <__bad_interrupt>:
 bc4:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.analogInit:

00000bac <analogInit>:
#include "analog_hal.h"


void analogInit()
{
	ADCSRA  = 0x93;                //initiates the ADC with 8 dividing base
 bac:	83 e9       	ldi	r24, 0x93	; 147
 bae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	ADMUX   = 0x40;                //voltage reference internal 5V
 bb2:	80 e4       	ldi	r24, 0x40	; 64
 bb4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
 bb8:	08 95       	ret

Disassembly of section .text.__vector_14:

0000082a <__vector_14>:

int h, m, s;	
 
//===================// Timer 0 Interrupt //===================//
ISR(TIMER0_COMPA_vect)
{//1ms each pulse 
 82a:	1f 92       	push	r1
 82c:	0f 92       	push	r0
 82e:	0f b6       	in	r0, 0x3f	; 63
 830:	0f 92       	push	r0
 832:	11 24       	eor	r1, r1
 834:	2f 93       	push	r18
 836:	8f 93       	push	r24
 838:	9f 93       	push	r25
 83a:	af 93       	push	r26
 83c:	bf 93       	push	r27
	
	if(millis==65535)
 83e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <millis>
 842:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <millis+0x1>
 846:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <millis+0x2>
 84a:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <millis+0x3>
 84e:	8f 3f       	cpi	r24, 0xFF	; 255
 850:	2f ef       	ldi	r18, 0xFF	; 255
 852:	92 07       	cpc	r25, r18
 854:	a1 05       	cpc	r26, r1
 856:	b1 05       	cpc	r27, r1
 858:	89 f4       	brne	.+34     	; 0x87c <__vector_14+0x52>
	{
		millis = 0;
 85a:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <millis>
 85e:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <millis+0x1>
 862:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <millis+0x2>
 866:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <millis+0x3>
		pastmills = 0;
 86a:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <_end>
 86e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <_end+0x1>
 872:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <_end+0x2>
 876:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <_end+0x3>
 87a:	11 c0       	rjmp	.+34     	; 0x89e <__vector_14+0x74>
	}else if(millis<65535){millis += 1;}
 87c:	8f 3f       	cpi	r24, 0xFF	; 255
 87e:	2f ef       	ldi	r18, 0xFF	; 255
 880:	92 07       	cpc	r25, r18
 882:	a1 05       	cpc	r26, r1
 884:	b1 05       	cpc	r27, r1
 886:	58 f4       	brcc	.+22     	; 0x89e <__vector_14+0x74>
 888:	01 96       	adiw	r24, 0x01	; 1
 88a:	a1 1d       	adc	r26, r1
 88c:	b1 1d       	adc	r27, r1
 88e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <millis>
 892:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <millis+0x1>
 896:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <millis+0x2>
 89a:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <millis+0x3>
	TCNT0 = 0x00;
 89e:	16 bc       	out	0x26, r1	; 38
	
}
 8a0:	bf 91       	pop	r27
 8a2:	af 91       	pop	r26
 8a4:	9f 91       	pop	r25
 8a6:	8f 91       	pop	r24
 8a8:	2f 91       	pop	r18
 8aa:	0f 90       	pop	r0
 8ac:	0f be       	out	0x3f, r0	; 63
 8ae:	0f 90       	pop	r0
 8b0:	1f 90       	pop	r1
 8b2:	18 95       	reti

Disassembly of section .text.inverte_led:

00000bba <inverte_led>:
 		}
}

void inverte_led()
{
	invert_bit(PORTB,PORTB5);
 bba:	95 b1       	in	r25, 0x05	; 5
 bbc:	80 e2       	ldi	r24, 0x20	; 32
 bbe:	89 27       	eor	r24, r25
 bc0:	85 b9       	out	0x05, r24	; 5
 bc2:	08 95       	ret

Disassembly of section .text.__vector_11:

0000077e <__vector_11>:
	
}

//===================// Timer 1 Interrupt //===================//
ISR(TIMER1_COMPA_vect)
{//1s each pulse
 77e:	1f 92       	push	r1
 780:	0f 92       	push	r0
 782:	0f b6       	in	r0, 0x3f	; 63
 784:	0f 92       	push	r0
 786:	11 24       	eor	r1, r1
 788:	2f 93       	push	r18
 78a:	3f 93       	push	r19
 78c:	4f 93       	push	r20
 78e:	5f 93       	push	r21
 790:	6f 93       	push	r22
 792:	7f 93       	push	r23
 794:	8f 93       	push	r24
 796:	9f 93       	push	r25
 798:	af 93       	push	r26
 79a:	bf 93       	push	r27
 79c:	ef 93       	push	r30
 79e:	ff 93       	push	r31
	
	inverte_led();
 7a0:	0e 94 dd 05 	call	0xbba	; 0xbba <inverte_led>
	
	if(start_flag)
 7a4:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <start_flag>
 7a8:	88 23       	and	r24, r24
 7aa:	51 f1       	breq	.+84     	; 0x800 <__DATA_REGION_LENGTH__>
	{
		if(seconds==86400)
 7ac:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <seconds>
 7b0:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <seconds+0x1>
 7b4:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <seconds+0x2>
 7b8:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <seconds+0x3>
 7bc:	80 38       	cpi	r24, 0x80	; 128
 7be:	21 e5       	ldi	r18, 0x51	; 81
 7c0:	92 07       	cpc	r25, r18
 7c2:	21 e0       	ldi	r18, 0x01	; 1
 7c4:	a2 07       	cpc	r26, r18
 7c6:	b1 05       	cpc	r27, r1
 7c8:	49 f4       	brne	.+18     	; 0x7dc <__vector_11+0x5e>
		{
			seconds = 0;
 7ca:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <seconds>
 7ce:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <seconds+0x1>
 7d2:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <seconds+0x2>
 7d6:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <seconds+0x3>
 7da:	12 c0       	rjmp	.+36     	; 0x800 <__DATA_REGION_LENGTH__>
		}else if(seconds<86400) seconds++;
 7dc:	80 38       	cpi	r24, 0x80	; 128
 7de:	21 e5       	ldi	r18, 0x51	; 81
 7e0:	92 07       	cpc	r25, r18
 7e2:	21 e0       	ldi	r18, 0x01	; 1
 7e4:	a2 07       	cpc	r26, r18
 7e6:	b1 05       	cpc	r27, r1
 7e8:	58 f4       	brcc	.+22     	; 0x800 <__DATA_REGION_LENGTH__>
 7ea:	01 96       	adiw	r24, 0x01	; 1
 7ec:	a1 1d       	adc	r26, r1
 7ee:	b1 1d       	adc	r27, r1
 7f0:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <seconds>
 7f4:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <seconds+0x1>
 7f8:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <seconds+0x2>
 7fc:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <seconds+0x3>
	}
			
	TCNT1 = 0x00;                      //resets TIMER1	
 800:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 804:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
}
 808:	ff 91       	pop	r31
 80a:	ef 91       	pop	r30
 80c:	bf 91       	pop	r27
 80e:	af 91       	pop	r26
 810:	9f 91       	pop	r25
 812:	8f 91       	pop	r24
 814:	7f 91       	pop	r23
 816:	6f 91       	pop	r22
 818:	5f 91       	pop	r21
 81a:	4f 91       	pop	r20
 81c:	3f 91       	pop	r19
 81e:	2f 91       	pop	r18
 820:	0f 90       	pop	r0
 822:	0f be       	out	0x3f, r0	; 63
 824:	0f 90       	pop	r0
 826:	1f 90       	pop	r1
 828:	18 95       	reti

Disassembly of section .text.sec_to_time:

00000522 <sec_to_time>:
{
	invert_bit(PORTB,PORTB5);
}

unsigned long sec_to_time(unsigned long sec)
{
 522:	8f 92       	push	r8
 524:	9f 92       	push	r9
 526:	af 92       	push	r10
 528:	bf 92       	push	r11
 52a:	cf 92       	push	r12
 52c:	df 92       	push	r13
 52e:	ef 92       	push	r14
 530:	ff 92       	push	r15
 532:	1f 93       	push	r17
 534:	6b 01       	movw	r12, r22
 536:	7c 01       	movw	r14, r24
	h = (sec/3600);
 538:	20 e1       	ldi	r18, 0x10	; 16
 53a:	3e e0       	ldi	r19, 0x0E	; 14
 53c:	40 e0       	ldi	r20, 0x00	; 0
 53e:	50 e0       	ldi	r21, 0x00	; 0
 540:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__udivmodsi4>
 544:	49 01       	movw	r8, r18
 546:	5a 01       	movw	r10, r20
 548:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <h+0x1>
 54c:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <h>
	
	m = (sec -(3600*h))/60;
 550:	20 e1       	ldi	r18, 0x10	; 16
 552:	3e e0       	ldi	r19, 0x0E	; 14
 554:	28 9d       	mul	r18, r8
 556:	c0 01       	movw	r24, r0
 558:	29 9d       	mul	r18, r9
 55a:	90 0d       	add	r25, r0
 55c:	38 9d       	mul	r19, r8
 55e:	90 0d       	add	r25, r0
 560:	11 24       	eor	r1, r1
 562:	09 2e       	mov	r0, r25
 564:	00 0c       	add	r0, r0
 566:	aa 0b       	sbc	r26, r26
 568:	bb 0b       	sbc	r27, r27
 56a:	a7 01       	movw	r20, r14
 56c:	96 01       	movw	r18, r12
 56e:	28 1b       	sub	r18, r24
 570:	39 0b       	sbc	r19, r25
 572:	4a 0b       	sbc	r20, r26
 574:	5b 0b       	sbc	r21, r27
 576:	ca 01       	movw	r24, r20
 578:	b9 01       	movw	r22, r18
 57a:	2c e3       	ldi	r18, 0x3C	; 60
 57c:	30 e0       	ldi	r19, 0x00	; 0
 57e:	40 e0       	ldi	r20, 0x00	; 0
 580:	50 e0       	ldi	r21, 0x00	; 0
 582:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__udivmodsi4>
 586:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <m+0x1>
 58a:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <m>
	
	s = (sec -(3600*h)-(m*60));
 58e:	14 ec       	ldi	r17, 0xC4	; 196
 590:	12 03       	mulsu	r17, r18
 592:	b0 01       	movw	r22, r0
 594:	13 9f       	mul	r17, r19
 596:	70 0d       	add	r23, r0
 598:	11 24       	eor	r1, r1
 59a:	20 ef       	ldi	r18, 0xF0	; 240
 59c:	31 ef       	ldi	r19, 0xF1	; 241
 59e:	28 9d       	mul	r18, r8
 5a0:	c0 01       	movw	r24, r0
 5a2:	29 9d       	mul	r18, r9
 5a4:	90 0d       	add	r25, r0
 5a6:	38 9d       	mul	r19, r8
 5a8:	90 0d       	add	r25, r0
 5aa:	11 24       	eor	r1, r1
 5ac:	86 0f       	add	r24, r22
 5ae:	97 1f       	adc	r25, r23
 5b0:	c8 0e       	add	r12, r24
 5b2:	d9 1e       	adc	r13, r25
 5b4:	d0 92 01 01 	sts	0x0101, r13	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5b8:	c0 92 00 01 	sts	0x0100, r12	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	USART_SendInt(h);
 5bc:	c4 01       	movw	r24, r8
 5be:	0e 94 96 04 	call	0x92c	; 0x92c <USART_SendInt>
	USART_Transmit(':');
 5c2:	8a e3       	ldi	r24, 0x3A	; 58
 5c4:	0e 94 b1 05 	call	0xb62	; 0xb62 <USART_Transmit>
	USART_SendInt(m);
 5c8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <m>
 5cc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <m+0x1>
 5d0:	0e 94 96 04 	call	0x92c	; 0x92c <USART_SendInt>
	USART_Transmit(':');
 5d4:	8a e3       	ldi	r24, 0x3A	; 58
 5d6:	0e 94 b1 05 	call	0xb62	; 0xb62 <USART_Transmit>
	USART_SendInt(s);
 5da:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 5de:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5e2:	0e 94 96 04 	call	0x92c	; 0x92c <USART_SendInt>
	USART_Transmit('\n');
 5e6:	8a e0       	ldi	r24, 0x0A	; 10
 5e8:	0e 94 b1 05 	call	0xb62	; 0xb62 <USART_Transmit>
	
	return 0;
}
 5ec:	60 e0       	ldi	r22, 0x00	; 0
 5ee:	70 e0       	ldi	r23, 0x00	; 0
 5f0:	cb 01       	movw	r24, r22
 5f2:	1f 91       	pop	r17
 5f4:	ff 90       	pop	r15
 5f6:	ef 90       	pop	r14
 5f8:	df 90       	pop	r13
 5fa:	cf 90       	pop	r12
 5fc:	bf 90       	pop	r11
 5fe:	af 90       	pop	r10
 600:	9f 90       	pop	r9
 602:	8f 90       	pop	r8
 604:	08 95       	ret

Disassembly of section .text.main:

00000606 <main>:
	TCNT1 = 0x00;                      //resets TIMER1	
}

//===================// Main Code //===================//
int main(void)
{
 606:	cf 93       	push	r28
 608:	df 93       	push	r29
 60a:	cd b7       	in	r28, 0x3d	; 61
 60c:	de b7       	in	r29, 0x3e	; 62
 60e:	2f 97       	sbiw	r28, 0x0f	; 15
 610:	0f b6       	in	r0, 0x3f	; 63
 612:	f8 94       	cli
 614:	de bf       	out	0x3e, r29	; 62
 616:	0f be       	out	0x3f, r0	; 63
 618:	cd bf       	out	0x3d, r28	; 61
 	    //========== GPIO =========//
 	    set_bit(DDRB,PORTB5);		 //PB5 as output led onboard;
 61a:	84 b1       	in	r24, 0x04	; 4
 61c:	80 62       	ori	r24, 0x20	; 32
 61e:	84 b9       	out	0x04, r24	; 4

		
 	    //========== Global interrupt enable =========//
 	    sei();
 620:	78 94       	sei
 
 	    //========== ADC =========//
		analogInit();
 622:	0e 94 d6 05 	call	0xbac	; 0xbac <analogInit>
		
		//========== UART =========//	
		USART_Init(MYUBRR);
 626:	80 e1       	ldi	r24, 0x10	; 16
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 94 cb 05 	call	0xb96	; 0xb96 <USART_Init>
		char str[] = "Clock program\n";
 62e:	28 ec       	ldi	r18, 0xC8	; 200
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	40 e0       	ldi	r20, 0x00	; 0
 634:	8f e0       	ldi	r24, 0x0F	; 15
 636:	f9 01       	movw	r30, r18
 638:	de 01       	movw	r26, r28
 63a:	11 96       	adiw	r26, 0x01	; 1
 63c:	74 2f       	mov	r23, r20
 63e:	0e 94 be 05 	call	0xb7c	; 0xb7c <__movmemx_qi>
		
		USART_SendString((char *)str);
 642:	ce 01       	movw	r24, r28
 644:	01 96       	adiw	r24, 0x01	; 1
 646:	0e 94 40 05 	call	0xa80	; 0xa80 <USART_SendString>
		
		//========== Timers =========//	
		TIM0_init();
 64a:	0e 94 91 05 	call	0xb22	; 0xb22 <TIM0_init>
		TIM1_init();
 64e:	0e 94 25 05 	call	0xa4a	; 0xa4a <TIM1_init>
		
 		while(1)
 		{
			if(millis - pastmills>1000)
 652:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <millis>
 656:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <millis+0x1>
 65a:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <millis+0x2>
 65e:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <millis+0x3>
 662:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <_end>
 666:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <_end+0x1>
 66a:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <_end+0x2>
 66e:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <_end+0x3>
 672:	84 1b       	sub	r24, r20
 674:	95 0b       	sbc	r25, r21
 676:	a6 0b       	sbc	r26, r22
 678:	b7 0b       	sbc	r27, r23
 67a:	89 3e       	cpi	r24, 0xE9	; 233
 67c:	93 40       	sbci	r25, 0x03	; 3
 67e:	a1 05       	cpc	r26, r1
 680:	b1 05       	cpc	r27, r1
 682:	38 f3       	brcs	.-50     	; 0x652 <main+0x4c>
			{
				if(start_flag)
 684:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <start_flag>
 688:	88 23       	and	r24, r24
 68a:	51 f0       	breq	.+20     	; 0x6a0 <main+0x9a>
				{
					sec_to_time(seconds);
 68c:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <seconds>
 690:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <seconds+0x1>
 694:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <seconds+0x2>
 698:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <seconds+0x3>
 69c:	0e 94 91 02 	call	0x522	; 0x522 <sec_to_time>
				}
				pastmills = millis;
 6a0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <millis>
 6a4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <millis+0x1>
 6a8:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <millis+0x2>
 6ac:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <millis+0x3>
 6b0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_end>
 6b4:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_end+0x1>
 6b8:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <_end+0x2>
 6bc:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <_end+0x3>
 6c0:	c8 cf       	rjmp	.-112    	; 0x652 <main+0x4c>

Disassembly of section .text.TIM0_init:

00000b22 <TIM0_init>:
 */ 

void TIM0_init()
{
		//========== TIMER0 =========//
		TCCR0A = 0;
 b22:	14 bc       	out	0x24, r1	; 36
		
		//Prescaler 1:64
		reset_bit(TCCR0B,CS02);	  //0
 b24:	85 b5       	in	r24, 0x25	; 37
 b26:	8b 7f       	andi	r24, 0xFB	; 251
 b28:	85 bd       	out	0x25, r24	; 37
		set_bit(TCCR0B,CS01);     //1
 b2a:	85 b5       	in	r24, 0x25	; 37
 b2c:	82 60       	ori	r24, 0x02	; 2
 b2e:	85 bd       	out	0x25, r24	; 37
		set_bit(TCCR0B,CS00);	  //1
 b30:	85 b5       	in	r24, 0x25	; 37
 b32:	81 60       	ori	r24, 0x01	; 1
 b34:	85 bd       	out	0x25, r24	; 37
		
		//Start and compare value for timer 0
		TCNT0 = 0x00;
 b36:	16 bc       	out	0x26, r1	; 38
		OCR0A = T0_comp;
 b38:	89 ef       	ldi	r24, 0xF9	; 249
 b3a:	87 bd       	out	0x27, r24	; 39
		
		//Start and compare value for timer 0
		TIMSK0 = (1<<OCIE0A);	
 b3c:	82 e0       	ldi	r24, 0x02	; 2
 b3e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
 b42:	08 95       	ret

Disassembly of section .text.TIM1_init:

00000a4a <TIM1_init>:
}

void TIM1_init()
{
 	    //========== TIMER1 =========//
 	    TCCR1A = 0;					//unable PWM, compare mode
 a4a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 	    
 	    //Prescaler 1:256
 	    set_bit(TCCR1B,CS12);       // 1
 a4e:	e1 e8       	ldi	r30, 0x81	; 129
 a50:	f0 e0       	ldi	r31, 0x00	; 0
 a52:	80 81       	ld	r24, Z
 a54:	84 60       	ori	r24, 0x04	; 4
 a56:	80 83       	st	Z, r24
 	    reset_bit(TCCR1B,CS11);		// 0
 a58:	80 81       	ld	r24, Z
 a5a:	8d 7f       	andi	r24, 0xFD	; 253
 a5c:	80 83       	st	Z, r24
 	    reset_bit(TCCR1B,CS10);		// 0
 a5e:	80 81       	ld	r24, Z
 a60:	8e 7f       	andi	r24, 0xFE	; 254
 a62:	80 83       	st	Z, r24
 	    
 	    //Start and compare value for timer1
 	    TCNT1 = 0x00;
 a64:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 a68:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 	    OCR1A = T1_comp;
 a6c:	83 e2       	ldi	r24, 0x23	; 35
 a6e:	94 ef       	ldi	r25, 0xF4	; 244
 a70:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 a74:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 	    
 	    //Start and compare value for timer1
 	    TIMSK1 = (1 << OCIE1A);	
 a78:	82 e0       	ldi	r24, 0x02	; 2
 a7a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
 a7e:	08 95       	ret

Disassembly of section .text.__vector_20:

00000b44 <__vector_20>:
#include "uart_hal.h"

volatile uint8_t uart_tx_done = 1;  //1 as default	

ISR(USART_TX_vect)
{
 b44:	1f 92       	push	r1
 b46:	0f 92       	push	r0
 b48:	0f b6       	in	r0, 0x3f	; 63
 b4a:	0f 92       	push	r0
 b4c:	11 24       	eor	r1, r1
 b4e:	8f 93       	push	r24
	uart_tx_done = 1;
 b50:	81 e0       	ldi	r24, 0x01	; 1
 b52:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <uart_tx_done>
}
 b56:	8f 91       	pop	r24
 b58:	0f 90       	pop	r0
 b5a:	0f be       	out	0x3f, r0	; 63
 b5c:	0f 90       	pop	r0
 b5e:	1f 90       	pop	r1
 b60:	18 95       	reti

Disassembly of section .text.USART_Init:

00000b96 <USART_Init>:

void USART_Init(unsigned int ubrr)
{
	
	/*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 b96:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)ubrr;
 b9a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	/*Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 b9e:	88 e1       	ldi	r24, 0x18	; 24
 ba0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
 ba4:	8e e0       	ldi	r24, 0x0E	; 14
 ba6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 baa:	08 95       	ret

Disassembly of section .text.USART_Transmit:

00000b62 <USART_Transmit>:
}

void USART_Transmit(char data)
{
	uart_tx_done = 0;
 b62:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <uart_tx_done>
	
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)))
 b66:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 b6a:	95 ff       	sbrs	r25, 5
 b6c:	fc cf       	rjmp	.-8      	; 0xb66 <USART_Transmit+0x4>
	;
	/* Put data into buffer, sends the data */
	if(uart_tx_done!=1)
 b6e:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <uart_tx_done>
 b72:	91 30       	cpi	r25, 0x01	; 1
 b74:	11 f0       	breq	.+4      	; 0xb7a <USART_Transmit+0x18>
	{
		UDR0 = data;
 b76:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 b7a:	08 95       	ret

Disassembly of section .text.USART_SendString:

00000a80 <USART_SendString>:
	}
}

void USART_SendString(char *data)
{
 a80:	0f 93       	push	r16
 a82:	1f 93       	push	r17
 a84:	cf 93       	push	r28
 a86:	df 93       	push	r29
 a88:	8c 01       	movw	r16, r24
	uint16_t i = 0;
 a8a:	c0 e0       	ldi	r28, 0x00	; 0
 a8c:	d0 e0       	ldi	r29, 0x00	; 0
	do{
		USART_Transmit(data[i]);
 a8e:	f8 01       	movw	r30, r16
 a90:	ec 0f       	add	r30, r28
 a92:	fd 1f       	adc	r31, r29
 a94:	80 81       	ld	r24, Z
 a96:	0e 94 b1 05 	call	0xb62	; 0xb62 <USART_Transmit>
		i++;
 a9a:	21 96       	adiw	r28, 0x01	; 1
		
	}while(data[i] != '\0');
 a9c:	f8 01       	movw	r30, r16
 a9e:	ec 0f       	add	r30, r28
 aa0:	fd 1f       	adc	r31, r29
 aa2:	80 81       	ld	r24, Z
 aa4:	81 11       	cpse	r24, r1
 aa6:	f3 cf       	rjmp	.-26     	; 0xa8e <USART_SendString+0xe>
	USART_Transmit(data[i]);
 aa8:	0e 94 b1 05 	call	0xb62	; 0xb62 <USART_Transmit>
}
 aac:	df 91       	pop	r29
 aae:	cf 91       	pop	r28
 ab0:	1f 91       	pop	r17
 ab2:	0f 91       	pop	r16
 ab4:	08 95       	ret

Disassembly of section .text.USART_SendInt:

0000092c <USART_SendInt>:

void USART_SendInt(int16_t value)
{
 92c:	0f 93       	push	r16
 92e:	1f 93       	push	r17
 930:	cf 93       	push	r28
 932:	df 93       	push	r29
 934:	cd b7       	in	r28, 0x3d	; 61
 936:	de b7       	in	r29, 0x3e	; 62
 938:	e2 97       	sbiw	r28, 0x32	; 50
 93a:	0f b6       	in	r0, 0x3f	; 63
 93c:	f8 94       	cli
 93e:	de bf       	out	0x3e, r29	; 62
 940:	0f be       	out	0x3f, r0	; 63
 942:	cd bf       	out	0x3d, r28	; 61
	char buf[50];
	sprintf(buf,"%d",value);
 944:	9f 93       	push	r25
 946:	8f 93       	push	r24
 948:	87 ed       	ldi	r24, 0xD7	; 215
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	a0 e0       	ldi	r26, 0x00	; 0
 94e:	af 93       	push	r26
 950:	9f 93       	push	r25
 952:	8f 93       	push	r24
 954:	8e 01       	movw	r16, r28
 956:	0f 5f       	subi	r16, 0xFF	; 255
 958:	1f 4f       	sbci	r17, 0xFF	; 255
 95a:	1f 93       	push	r17
 95c:	0f 93       	push	r16
 95e:	0e 94 c4 04 	call	0x988	; 0x988 <sprintf>
	USART_SendString(buf);
 962:	c8 01       	movw	r24, r16
 964:	0e 94 40 05 	call	0xa80	; 0xa80 <USART_SendString>
}
 968:	0f b6       	in	r0, 0x3f	; 63
 96a:	f8 94       	cli
 96c:	de bf       	out	0x3e, r29	; 62
 96e:	0f be       	out	0x3f, r0	; 63
 970:	cd bf       	out	0x3d, r28	; 61
 972:	e2 96       	adiw	r28, 0x32	; 50
 974:	0f b6       	in	r0, 0x3f	; 63
 976:	f8 94       	cli
 978:	de bf       	out	0x3e, r29	; 62
 97a:	0f be       	out	0x3f, r0	; 63
 97c:	cd bf       	out	0x3d, r28	; 61
 97e:	df 91       	pop	r29
 980:	cf 91       	pop	r28
 982:	1f 91       	pop	r17
 984:	0f 91       	pop	r16
 986:	08 95       	ret

Disassembly of section .text.libgcc.div:

000009ce <__udivmodsi4>:
 9ce:	a1 e2       	ldi	r26, 0x21	; 33
 9d0:	1a 2e       	mov	r1, r26
 9d2:	aa 1b       	sub	r26, r26
 9d4:	bb 1b       	sub	r27, r27
 9d6:	fd 01       	movw	r30, r26
 9d8:	0d c0       	rjmp	.+26     	; 0x9f4 <__udivmodsi4_ep>

000009da <__udivmodsi4_loop>:
 9da:	aa 1f       	adc	r26, r26
 9dc:	bb 1f       	adc	r27, r27
 9de:	ee 1f       	adc	r30, r30
 9e0:	ff 1f       	adc	r31, r31
 9e2:	a2 17       	cp	r26, r18
 9e4:	b3 07       	cpc	r27, r19
 9e6:	e4 07       	cpc	r30, r20
 9e8:	f5 07       	cpc	r31, r21
 9ea:	20 f0       	brcs	.+8      	; 0x9f4 <__udivmodsi4_ep>
 9ec:	a2 1b       	sub	r26, r18
 9ee:	b3 0b       	sbc	r27, r19
 9f0:	e4 0b       	sbc	r30, r20
 9f2:	f5 0b       	sbc	r31, r21

000009f4 <__udivmodsi4_ep>:
 9f4:	66 1f       	adc	r22, r22
 9f6:	77 1f       	adc	r23, r23
 9f8:	88 1f       	adc	r24, r24
 9fa:	99 1f       	adc	r25, r25
 9fc:	1a 94       	dec	r1
 9fe:	69 f7       	brne	.-38     	; 0x9da <__udivmodsi4_loop>
 a00:	60 95       	com	r22
 a02:	70 95       	com	r23
 a04:	80 95       	com	r24
 a06:	90 95       	com	r25
 a08:	9b 01       	movw	r18, r22
 a0a:	ac 01       	movw	r20, r24
 a0c:	bd 01       	movw	r22, r26
 a0e:	cf 01       	movw	r24, r30
 a10:	08 95       	ret

Disassembly of section .text.libgcc:

00000b7c <__movmemx_qi>:
 b7c:	99 27       	eor	r25, r25

00000b7e <__movmemx_hi>:
 b7e:	77 fd       	sbrc	r23, 7
 b80:	05 c0       	rjmp	.+10     	; 0xb8c <__movmemx_hi+0xe>
 b82:	05 90       	lpm	r0, Z+
 b84:	0d 92       	st	X+, r0
 b86:	01 97       	sbiw	r24, 0x01	; 1
 b88:	e1 f7       	brne	.-8      	; 0xb82 <__movmemx_hi+0x4>
 b8a:	08 95       	ret
 b8c:	01 90       	ld	r0, Z+
 b8e:	0d 92       	st	X+, r0
 b90:	01 97       	sbiw	r24, 0x01	; 1
 b92:	e1 f7       	brne	.-8      	; 0xb8c <__movmemx_hi+0xe>
 b94:	08 95       	ret

Disassembly of section .text.avrlibc:

00000988 <sprintf>:
 988:	af e0       	ldi	r26, 0x0F	; 15
 98a:	b0 e0       	ldi	r27, 0x00	; 0
 98c:	ea ec       	ldi	r30, 0xCA	; 202
 98e:	f4 e0       	ldi	r31, 0x04	; 4
 990:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__prologue_saves__+0x1c>
 994:	0e 89       	ldd	r16, Y+22	; 0x16
 996:	1f 89       	ldd	r17, Y+23	; 0x17
 998:	86 e0       	ldi	r24, 0x06	; 6
 99a:	8d 83       	std	Y+5, r24	; 0x05
 99c:	1a 83       	std	Y+2, r17	; 0x02
 99e:	09 83       	std	Y+1, r16	; 0x01
 9a0:	8f ef       	ldi	r24, 0xFF	; 255
 9a2:	9f e7       	ldi	r25, 0x7F	; 127
 9a4:	9f 83       	std	Y+7, r25	; 0x07
 9a6:	8e 83       	std	Y+6, r24	; 0x06
 9a8:	9e 01       	movw	r18, r28
 9aa:	25 5e       	subi	r18, 0xE5	; 229
 9ac:	3f 4f       	sbci	r19, 0xFF	; 255
 9ae:	48 8d       	ldd	r20, Y+24	; 0x18
 9b0:	59 8d       	ldd	r21, Y+25	; 0x19
 9b2:	6a 8d       	ldd	r22, Y+26	; 0x1a
 9b4:	ce 01       	movw	r24, r28
 9b6:	01 96       	adiw	r24, 0x01	; 1
 9b8:	0e 94 6d 00 	call	0xda	; 0xda <vfprintf>
 9bc:	e8 85       	ldd	r30, Y+8	; 0x08
 9be:	f9 85       	ldd	r31, Y+9	; 0x09
 9c0:	e0 0f       	add	r30, r16
 9c2:	f1 1f       	adc	r31, r17
 9c4:	10 82       	st	Z, r1
 9c6:	2f 96       	adiw	r28, 0x0f	; 15
 9c8:	e4 e0       	ldi	r30, 0x04	; 4
 9ca:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__epilogue_restores__+0x1c>

Disassembly of section .text.avrlibc:

000000da <vfprintf>:
  da:	2f 92       	push	r2
  dc:	3f 92       	push	r3
  de:	4f 92       	push	r4
  e0:	6f 92       	push	r6
  e2:	7f 92       	push	r7
  e4:	8f 92       	push	r8
  e6:	9f 92       	push	r9
  e8:	af 92       	push	r10
  ea:	bf 92       	push	r11
  ec:	cf 92       	push	r12
  ee:	df 92       	push	r13
  f0:	ef 92       	push	r14
  f2:	ff 92       	push	r15
  f4:	0f 93       	push	r16
  f6:	1f 93       	push	r17
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
  fc:	cd b7       	in	r28, 0x3d	; 61
  fe:	de b7       	in	r29, 0x3e	; 62
 100:	62 97       	sbiw	r28, 0x12	; 18
 102:	0f b6       	in	r0, 0x3f	; 63
 104:	f8 94       	cli
 106:	de bf       	out	0x3e, r29	; 62
 108:	0f be       	out	0x3f, r0	; 63
 10a:	cd bf       	out	0x3d, r28	; 61
 10c:	6c 01       	movw	r12, r24
 10e:	3a 01       	movw	r6, r20
 110:	86 2e       	mov	r8, r22
 112:	79 01       	movw	r14, r18
 114:	fc 01       	movw	r30, r24
 116:	10 86       	std	Z+8, r1	; 0x08
 118:	17 82       	std	Z+7, r1	; 0x07
 11a:	84 81       	ldd	r24, Z+4	; 0x04
 11c:	81 ff       	sbrs	r24, 1
 11e:	e7 c1       	rjmp	.+974    	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 120:	9e 01       	movw	r18, r28
 122:	2f 5f       	subi	r18, 0xFF	; 255
 124:	3f 4f       	sbci	r19, 0xFF	; 255
 126:	3d 87       	std	Y+13, r19	; 0x0d
 128:	2c 87       	std	Y+12, r18	; 0x0c
 12a:	c9 01       	movw	r24, r18
 12c:	a0 e8       	ldi	r26, 0x80	; 128
 12e:	88 8b       	std	Y+16, r24	; 0x10
 130:	99 8b       	std	Y+17, r25	; 0x11
 132:	aa 8b       	std	Y+18, r26	; 0x12
 134:	9f e3       	ldi	r25, 0x3F	; 63
 136:	99 2e       	mov	r9, r25
 138:	f3 01       	movw	r30, r6
 13a:	84 91       	lpm	r24, Z
 13c:	87 fc       	sbrc	r8, 7
 13e:	80 81       	ld	r24, Z
 140:	88 23       	and	r24, r24
 142:	09 f4       	brne	.+2      	; 0x146 <vfprintf+0x6c>
 144:	d0 c1       	rjmp	.+928    	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
 146:	48 2d       	mov	r20, r8
 148:	93 01       	movw	r18, r6
 14a:	2f 5f       	subi	r18, 0xFF	; 255
 14c:	3f 4f       	sbci	r19, 0xFF	; 255
 14e:	4f 4f       	sbci	r20, 0xFF	; 255
 150:	85 32       	cpi	r24, 0x25	; 37
 152:	19 f0       	breq	.+6      	; 0x15a <vfprintf+0x80>
 154:	39 01       	movw	r6, r18
 156:	84 2e       	mov	r8, r20
 158:	0a c0       	rjmp	.+20     	; 0x16e <vfprintf+0x94>
 15a:	f9 01       	movw	r30, r18
 15c:	84 91       	lpm	r24, Z
 15e:	47 fd       	sbrc	r20, 7
 160:	80 81       	ld	r24, Z
 162:	92 e0       	ldi	r25, 0x02	; 2
 164:	69 0e       	add	r6, r25
 166:	71 1c       	adc	r7, r1
 168:	81 1c       	adc	r8, r1
 16a:	85 32       	cpi	r24, 0x25	; 37
 16c:	29 f4       	brne	.+10     	; 0x178 <vfprintf+0x9e>
 16e:	b6 01       	movw	r22, r12
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 176:	e0 cf       	rjmp	.-64     	; 0x138 <vfprintf+0x5e>
 178:	b1 2c       	mov	r11, r1
 17a:	00 e0       	ldi	r16, 0x00	; 0
 17c:	10 e0       	ldi	r17, 0x00	; 0
 17e:	10 32       	cpi	r17, 0x20	; 32
 180:	a0 f4       	brcc	.+40     	; 0x1aa <vfprintf+0xd0>
 182:	8b 32       	cpi	r24, 0x2B	; 43
 184:	69 f0       	breq	.+26     	; 0x1a0 <vfprintf+0xc6>
 186:	30 f4       	brcc	.+12     	; 0x194 <vfprintf+0xba>
 188:	80 32       	cpi	r24, 0x20	; 32
 18a:	59 f0       	breq	.+22     	; 0x1a2 <vfprintf+0xc8>
 18c:	83 32       	cpi	r24, 0x23	; 35
 18e:	69 f4       	brne	.+26     	; 0x1aa <vfprintf+0xd0>
 190:	10 61       	ori	r17, 0x10	; 16
 192:	2c c0       	rjmp	.+88     	; 0x1ec <vfprintf+0x112>
 194:	8d 32       	cpi	r24, 0x2D	; 45
 196:	39 f0       	breq	.+14     	; 0x1a6 <vfprintf+0xcc>
 198:	80 33       	cpi	r24, 0x30	; 48
 19a:	39 f4       	brne	.+14     	; 0x1aa <vfprintf+0xd0>
 19c:	11 60       	ori	r17, 0x01	; 1
 19e:	26 c0       	rjmp	.+76     	; 0x1ec <vfprintf+0x112>
 1a0:	12 60       	ori	r17, 0x02	; 2
 1a2:	14 60       	ori	r17, 0x04	; 4
 1a4:	23 c0       	rjmp	.+70     	; 0x1ec <vfprintf+0x112>
 1a6:	18 60       	ori	r17, 0x08	; 8
 1a8:	21 c0       	rjmp	.+66     	; 0x1ec <vfprintf+0x112>
 1aa:	17 fd       	sbrc	r17, 7
 1ac:	29 c0       	rjmp	.+82     	; 0x200 <vfprintf+0x126>
 1ae:	90 ed       	ldi	r25, 0xD0	; 208
 1b0:	98 0f       	add	r25, r24
 1b2:	9a 30       	cpi	r25, 0x0A	; 10
 1b4:	78 f4       	brcc	.+30     	; 0x1d4 <vfprintf+0xfa>
 1b6:	16 ff       	sbrs	r17, 6
 1b8:	06 c0       	rjmp	.+12     	; 0x1c6 <vfprintf+0xec>
 1ba:	aa e0       	ldi	r26, 0x0A	; 10
 1bc:	ba 9e       	mul	r11, r26
 1be:	90 0d       	add	r25, r0
 1c0:	11 24       	eor	r1, r1
 1c2:	b9 2e       	mov	r11, r25
 1c4:	13 c0       	rjmp	.+38     	; 0x1ec <vfprintf+0x112>
 1c6:	ea e0       	ldi	r30, 0x0A	; 10
 1c8:	0e 9f       	mul	r16, r30
 1ca:	90 0d       	add	r25, r0
 1cc:	11 24       	eor	r1, r1
 1ce:	09 2f       	mov	r16, r25
 1d0:	10 62       	ori	r17, 0x20	; 32
 1d2:	0c c0       	rjmp	.+24     	; 0x1ec <vfprintf+0x112>
 1d4:	8e 32       	cpi	r24, 0x2E	; 46
 1d6:	21 f4       	brne	.+8      	; 0x1e0 <vfprintf+0x106>
 1d8:	16 fd       	sbrc	r17, 6
 1da:	85 c1       	rjmp	.+778    	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
 1dc:	10 64       	ori	r17, 0x40	; 64
 1de:	06 c0       	rjmp	.+12     	; 0x1ec <vfprintf+0x112>
 1e0:	8c 36       	cpi	r24, 0x6C	; 108
 1e2:	11 f4       	brne	.+4      	; 0x1e8 <vfprintf+0x10e>
 1e4:	10 68       	ori	r17, 0x80	; 128
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <vfprintf+0x112>
 1e8:	88 36       	cpi	r24, 0x68	; 104
 1ea:	51 f4       	brne	.+20     	; 0x200 <vfprintf+0x126>
 1ec:	f3 01       	movw	r30, r6
 1ee:	84 91       	lpm	r24, Z
 1f0:	87 fc       	sbrc	r8, 7
 1f2:	80 81       	ld	r24, Z
 1f4:	ff ef       	ldi	r31, 0xFF	; 255
 1f6:	6f 1a       	sub	r6, r31
 1f8:	7f 0a       	sbc	r7, r31
 1fa:	8f 0a       	sbc	r8, r31
 1fc:	81 11       	cpse	r24, r1
 1fe:	bf cf       	rjmp	.-130    	; 0x17e <vfprintf+0xa4>
 200:	98 2f       	mov	r25, r24
 202:	9f 7d       	andi	r25, 0xDF	; 223
 204:	95 54       	subi	r25, 0x45	; 69
 206:	93 30       	cpi	r25, 0x03	; 3
 208:	28 f4       	brcc	.+10     	; 0x214 <vfprintf+0x13a>
 20a:	24 e0       	ldi	r18, 0x04	; 4
 20c:	e2 0e       	add	r14, r18
 20e:	f1 1c       	adc	r15, r1
 210:	99 82       	std	Y+1, r9	; 0x01
 212:	0f c0       	rjmp	.+30     	; 0x232 <vfprintf+0x158>
 214:	83 36       	cpi	r24, 0x63	; 99
 216:	31 f0       	breq	.+12     	; 0x224 <vfprintf+0x14a>
 218:	83 37       	cpi	r24, 0x73	; 115
 21a:	91 f0       	breq	.+36     	; 0x240 <vfprintf+0x166>
 21c:	83 35       	cpi	r24, 0x53	; 83
 21e:	09 f0       	breq	.+2      	; 0x222 <vfprintf+0x148>
 220:	63 c0       	rjmp	.+198    	; 0x2e8 <vfprintf+0x20e>
 222:	27 c0       	rjmp	.+78     	; 0x272 <vfprintf+0x198>
 224:	f7 01       	movw	r30, r14
 226:	80 81       	ld	r24, Z
 228:	89 83       	std	Y+1, r24	; 0x01
 22a:	97 01       	movw	r18, r14
 22c:	2e 5f       	subi	r18, 0xFE	; 254
 22e:	3f 4f       	sbci	r19, 0xFF	; 255
 230:	79 01       	movw	r14, r18
 232:	28 88       	ldd	r2, Y+16	; 0x10
 234:	39 88       	ldd	r3, Y+17	; 0x11
 236:	4a 88       	ldd	r4, Y+18	; 0x12
 238:	aa 24       	eor	r10, r10
 23a:	a3 94       	inc	r10
 23c:	b1 2c       	mov	r11, r1
 23e:	17 c0       	rjmp	.+46     	; 0x26e <vfprintf+0x194>
 240:	a7 01       	movw	r20, r14
 242:	4d 5f       	subi	r20, 0xFD	; 253
 244:	5f 4f       	sbci	r21, 0xFF	; 255
 246:	5f 87       	std	Y+15, r21	; 0x0f
 248:	4e 87       	std	Y+14, r20	; 0x0e
 24a:	f7 01       	movw	r30, r14
 24c:	20 80       	ld	r2, Z
 24e:	31 80       	ldd	r3, Z+1	; 0x01
 250:	42 80       	ldd	r4, Z+2	; 0x02
 252:	16 ff       	sbrs	r17, 6
 254:	03 c0       	rjmp	.+6      	; 0x25c <vfprintf+0x182>
 256:	4b 2d       	mov	r20, r11
 258:	50 e0       	ldi	r21, 0x00	; 0
 25a:	02 c0       	rjmp	.+4      	; 0x260 <vfprintf+0x186>
 25c:	4f ef       	ldi	r20, 0xFF	; 255
 25e:	5f ef       	ldi	r21, 0xFF	; 255
 260:	84 2d       	mov	r24, r4
 262:	b1 01       	movw	r22, r2
 264:	0e 94 5b 05 	call	0xab6	; 0xab6 <strnlen>
 268:	5c 01       	movw	r10, r24
 26a:	ee 84       	ldd	r14, Y+14	; 0x0e
 26c:	ff 84       	ldd	r15, Y+15	; 0x0f
 26e:	1f 77       	andi	r17, 0x7F	; 127
 270:	18 c0       	rjmp	.+48     	; 0x2a2 <vfprintf+0x1c8>
 272:	97 01       	movw	r18, r14
 274:	2d 5f       	subi	r18, 0xFD	; 253
 276:	3f 4f       	sbci	r19, 0xFF	; 255
 278:	3f 87       	std	Y+15, r19	; 0x0f
 27a:	2e 87       	std	Y+14, r18	; 0x0e
 27c:	f7 01       	movw	r30, r14
 27e:	20 80       	ld	r2, Z
 280:	31 80       	ldd	r3, Z+1	; 0x01
 282:	42 80       	ldd	r4, Z+2	; 0x02
 284:	16 ff       	sbrs	r17, 6
 286:	03 c0       	rjmp	.+6      	; 0x28e <vfprintf+0x1b4>
 288:	4b 2d       	mov	r20, r11
 28a:	50 e0       	ldi	r21, 0x00	; 0
 28c:	02 c0       	rjmp	.+4      	; 0x292 <vfprintf+0x1b8>
 28e:	4f ef       	ldi	r20, 0xFF	; 255
 290:	5f ef       	ldi	r21, 0xFF	; 255
 292:	84 2d       	mov	r24, r4
 294:	b1 01       	movw	r22, r2
 296:	0e 94 5b 05 	call	0xab6	; 0xab6 <strnlen>
 29a:	5c 01       	movw	r10, r24
 29c:	10 68       	ori	r17, 0x80	; 128
 29e:	ee 84       	ldd	r14, Y+14	; 0x0e
 2a0:	ff 84       	ldd	r15, Y+15	; 0x0f
 2a2:	13 fd       	sbrc	r17, 3
 2a4:	1d c0       	rjmp	.+58     	; 0x2e0 <vfprintf+0x206>
 2a6:	80 2f       	mov	r24, r16
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	a8 16       	cp	r10, r24
 2ac:	b9 06       	cpc	r11, r25
 2ae:	c0 f4       	brcc	.+48     	; 0x2e0 <vfprintf+0x206>
 2b0:	b6 01       	movw	r22, r12
 2b2:	80 e2       	ldi	r24, 0x20	; 32
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 2ba:	01 50       	subi	r16, 0x01	; 1
 2bc:	f4 cf       	rjmp	.-24     	; 0x2a6 <vfprintf+0x1cc>
 2be:	f1 01       	movw	r30, r2
 2c0:	84 91       	lpm	r24, Z
 2c2:	47 fc       	sbrc	r4, 7
 2c4:	80 81       	ld	r24, Z
 2c6:	ff ef       	ldi	r31, 0xFF	; 255
 2c8:	2f 1a       	sub	r2, r31
 2ca:	3f 0a       	sbc	r3, r31
 2cc:	4f 0a       	sbc	r4, r31
 2ce:	b6 01       	movw	r22, r12
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 2d6:	01 11       	cpse	r16, r1
 2d8:	01 50       	subi	r16, 0x01	; 1
 2da:	21 e0       	ldi	r18, 0x01	; 1
 2dc:	a2 1a       	sub	r10, r18
 2de:	b1 08       	sbc	r11, r1
 2e0:	a1 14       	cp	r10, r1
 2e2:	b1 04       	cpc	r11, r1
 2e4:	61 f7       	brne	.-40     	; 0x2be <vfprintf+0x1e4>
 2e6:	f5 c0       	rjmp	.+490    	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 2e8:	84 36       	cpi	r24, 0x64	; 100
 2ea:	11 f0       	breq	.+4      	; 0x2f0 <vfprintf+0x216>
 2ec:	89 36       	cpi	r24, 0x69	; 105
 2ee:	71 f5       	brne	.+92     	; 0x34c <vfprintf+0x272>
 2f0:	f7 01       	movw	r30, r14
 2f2:	17 ff       	sbrs	r17, 7
 2f4:	08 c0       	rjmp	.+16     	; 0x306 <vfprintf+0x22c>
 2f6:	60 81       	ld	r22, Z
 2f8:	71 81       	ldd	r23, Z+1	; 0x01
 2fa:	82 81       	ldd	r24, Z+2	; 0x02
 2fc:	93 81       	ldd	r25, Z+3	; 0x03
 2fe:	97 01       	movw	r18, r14
 300:	2c 5f       	subi	r18, 0xFC	; 252
 302:	3f 4f       	sbci	r19, 0xFF	; 255
 304:	09 c0       	rjmp	.+18     	; 0x318 <vfprintf+0x23e>
 306:	60 81       	ld	r22, Z
 308:	71 81       	ldd	r23, Z+1	; 0x01
 30a:	07 2e       	mov	r0, r23
 30c:	00 0c       	add	r0, r0
 30e:	88 0b       	sbc	r24, r24
 310:	99 0b       	sbc	r25, r25
 312:	97 01       	movw	r18, r14
 314:	2e 5f       	subi	r18, 0xFE	; 254
 316:	3f 4f       	sbci	r19, 0xFF	; 255
 318:	79 01       	movw	r14, r18
 31a:	1f 76       	andi	r17, 0x6F	; 111
 31c:	31 2e       	mov	r3, r17
 31e:	97 ff       	sbrs	r25, 7
 320:	0a c0       	rjmp	.+20     	; 0x336 <vfprintf+0x25c>
 322:	90 95       	com	r25
 324:	80 95       	com	r24
 326:	70 95       	com	r23
 328:	61 95       	neg	r22
 32a:	7f 4f       	sbci	r23, 0xFF	; 255
 32c:	8f 4f       	sbci	r24, 0xFF	; 255
 32e:	9f 4f       	sbci	r25, 0xFF	; 255
 330:	31 2f       	mov	r19, r17
 332:	30 68       	ori	r19, 0x80	; 128
 334:	33 2e       	mov	r3, r19
 336:	2a e0       	ldi	r18, 0x0A	; 10
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	ae 01       	movw	r20, r28
 33c:	4f 5f       	subi	r20, 0xFF	; 255
 33e:	5f 4f       	sbci	r21, 0xFF	; 255
 340:	0e 94 61 03 	call	0x6c2	; 0x6c2 <__ultoa_invert>
 344:	48 2e       	mov	r4, r24
 346:	4c 85       	ldd	r20, Y+12	; 0x0c
 348:	44 1a       	sub	r4, r20
 34a:	4a c0       	rjmp	.+148    	; 0x3e0 <vfprintf+0x306>
 34c:	85 37       	cpi	r24, 0x75	; 117
 34e:	29 f4       	brne	.+10     	; 0x35a <vfprintf+0x280>
 350:	1f 7e       	andi	r17, 0xEF	; 239
 352:	a1 2e       	mov	r10, r17
 354:	2a e0       	ldi	r18, 0x0A	; 10
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	25 c0       	rjmp	.+74     	; 0x3a4 <vfprintf+0x2ca>
 35a:	51 2f       	mov	r21, r17
 35c:	59 7f       	andi	r21, 0xF9	; 249
 35e:	a5 2e       	mov	r10, r21
 360:	8f 36       	cpi	r24, 0x6F	; 111
 362:	c1 f0       	breq	.+48     	; 0x394 <vfprintf+0x2ba>
 364:	18 f4       	brcc	.+6      	; 0x36c <vfprintf+0x292>
 366:	88 35       	cpi	r24, 0x58	; 88
 368:	79 f0       	breq	.+30     	; 0x388 <vfprintf+0x2ae>
 36a:	bd c0       	rjmp	.+378    	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
 36c:	80 37       	cpi	r24, 0x70	; 112
 36e:	19 f0       	breq	.+6      	; 0x376 <vfprintf+0x29c>
 370:	88 37       	cpi	r24, 0x78	; 120
 372:	21 f0       	breq	.+8      	; 0x37c <vfprintf+0x2a2>
 374:	b8 c0       	rjmp	.+368    	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
 376:	85 2f       	mov	r24, r21
 378:	80 61       	ori	r24, 0x10	; 16
 37a:	a8 2e       	mov	r10, r24
 37c:	a4 fe       	sbrs	r10, 4
 37e:	0d c0       	rjmp	.+26     	; 0x39a <vfprintf+0x2c0>
 380:	9a 2d       	mov	r25, r10
 382:	94 60       	ori	r25, 0x04	; 4
 384:	a9 2e       	mov	r10, r25
 386:	09 c0       	rjmp	.+18     	; 0x39a <vfprintf+0x2c0>
 388:	14 ff       	sbrs	r17, 4
 38a:	0a c0       	rjmp	.+20     	; 0x3a0 <vfprintf+0x2c6>
 38c:	a5 2f       	mov	r26, r21
 38e:	a6 60       	ori	r26, 0x06	; 6
 390:	aa 2e       	mov	r10, r26
 392:	06 c0       	rjmp	.+12     	; 0x3a0 <vfprintf+0x2c6>
 394:	28 e0       	ldi	r18, 0x08	; 8
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	05 c0       	rjmp	.+10     	; 0x3a4 <vfprintf+0x2ca>
 39a:	20 e1       	ldi	r18, 0x10	; 16
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <vfprintf+0x2ca>
 3a0:	20 e1       	ldi	r18, 0x10	; 16
 3a2:	32 e0       	ldi	r19, 0x02	; 2
 3a4:	f7 01       	movw	r30, r14
 3a6:	a7 fe       	sbrs	r10, 7
 3a8:	08 c0       	rjmp	.+16     	; 0x3ba <vfprintf+0x2e0>
 3aa:	60 81       	ld	r22, Z
 3ac:	71 81       	ldd	r23, Z+1	; 0x01
 3ae:	82 81       	ldd	r24, Z+2	; 0x02
 3b0:	93 81       	ldd	r25, Z+3	; 0x03
 3b2:	a7 01       	movw	r20, r14
 3b4:	4c 5f       	subi	r20, 0xFC	; 252
 3b6:	5f 4f       	sbci	r21, 0xFF	; 255
 3b8:	07 c0       	rjmp	.+14     	; 0x3c8 <vfprintf+0x2ee>
 3ba:	60 81       	ld	r22, Z
 3bc:	71 81       	ldd	r23, Z+1	; 0x01
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	a7 01       	movw	r20, r14
 3c4:	4e 5f       	subi	r20, 0xFE	; 254
 3c6:	5f 4f       	sbci	r21, 0xFF	; 255
 3c8:	7a 01       	movw	r14, r20
 3ca:	ae 01       	movw	r20, r28
 3cc:	4f 5f       	subi	r20, 0xFF	; 255
 3ce:	5f 4f       	sbci	r21, 0xFF	; 255
 3d0:	0e 94 61 03 	call	0x6c2	; 0x6c2 <__ultoa_invert>
 3d4:	48 2e       	mov	r4, r24
 3d6:	5c 85       	ldd	r21, Y+12	; 0x0c
 3d8:	45 1a       	sub	r4, r21
 3da:	8a 2d       	mov	r24, r10
 3dc:	8f 77       	andi	r24, 0x7F	; 127
 3de:	38 2e       	mov	r3, r24
 3e0:	36 fe       	sbrs	r3, 6
 3e2:	0d c0       	rjmp	.+26     	; 0x3fe <vfprintf+0x324>
 3e4:	93 2d       	mov	r25, r3
 3e6:	9e 7f       	andi	r25, 0xFE	; 254
 3e8:	a9 2e       	mov	r10, r25
 3ea:	4b 14       	cp	r4, r11
 3ec:	58 f4       	brcc	.+22     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3ee:	34 fe       	sbrs	r3, 4
 3f0:	0b c0       	rjmp	.+22     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3f2:	32 fc       	sbrc	r3, 2
 3f4:	09 c0       	rjmp	.+18     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3f6:	a3 2d       	mov	r26, r3
 3f8:	ae 7e       	andi	r26, 0xEE	; 238
 3fa:	aa 2e       	mov	r10, r26
 3fc:	05 c0       	rjmp	.+10     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3fe:	14 2d       	mov	r17, r4
 400:	a3 2c       	mov	r10, r3
 402:	03 c0       	rjmp	.+6      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 404:	14 2d       	mov	r17, r4
 406:	01 c0       	rjmp	.+2      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 408:	1b 2d       	mov	r17, r11
 40a:	a4 fe       	sbrs	r10, 4
 40c:	0e c0       	rjmp	.+28     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 40e:	fe 01       	movw	r30, r28
 410:	e4 0d       	add	r30, r4
 412:	f1 1d       	adc	r31, r1
 414:	80 81       	ld	r24, Z
 416:	80 33       	cpi	r24, 0x30	; 48
 418:	21 f4       	brne	.+8      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 41a:	ea 2d       	mov	r30, r10
 41c:	e9 7e       	andi	r30, 0xE9	; 233
 41e:	ae 2e       	mov	r10, r30
 420:	08 c0       	rjmp	.+16     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 422:	a2 fe       	sbrs	r10, 2
 424:	05 c0       	rjmp	.+10     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 426:	1e 5f       	subi	r17, 0xFE	; 254
 428:	04 c0       	rjmp	.+8      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 42a:	8a 2d       	mov	r24, r10
 42c:	86 78       	andi	r24, 0x86	; 134
 42e:	09 f0       	breq	.+2      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 430:	1f 5f       	subi	r17, 0xFF	; 255
 432:	a3 fc       	sbrc	r10, 3
 434:	11 c0       	rjmp	.+34     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 436:	a0 fe       	sbrs	r10, 0
 438:	06 c0       	rjmp	.+12     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 43a:	10 17       	cp	r17, r16
 43c:	88 f4       	brcc	.+34     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 43e:	04 0d       	add	r16, r4
 440:	b0 2e       	mov	r11, r16
 442:	b1 1a       	sub	r11, r17
 444:	0e c0       	rjmp	.+28     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 446:	10 17       	cp	r17, r16
 448:	60 f4       	brcc	.+24     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 44a:	b6 01       	movw	r22, r12
 44c:	80 e2       	ldi	r24, 0x20	; 32
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 454:	1f 5f       	subi	r17, 0xFF	; 255
 456:	f7 cf       	rjmp	.-18     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 458:	10 17       	cp	r17, r16
 45a:	18 f4       	brcc	.+6      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 45c:	01 1b       	sub	r16, r17
 45e:	02 c0       	rjmp	.+4      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 460:	b4 2c       	mov	r11, r4
 462:	00 e0       	ldi	r16, 0x00	; 0
 464:	a4 fe       	sbrs	r10, 4
 466:	10 c0       	rjmp	.+32     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 468:	b6 01       	movw	r22, r12
 46a:	80 e3       	ldi	r24, 0x30	; 48
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 472:	a2 fe       	sbrs	r10, 2
 474:	17 c0       	rjmp	.+46     	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 476:	a1 fc       	sbrc	r10, 1
 478:	03 c0       	rjmp	.+6      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 47a:	88 e7       	ldi	r24, 0x78	; 120
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	02 c0       	rjmp	.+4      	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 480:	88 e5       	ldi	r24, 0x58	; 88
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	b6 01       	movw	r22, r12
 486:	0c c0       	rjmp	.+24     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 488:	8a 2d       	mov	r24, r10
 48a:	86 78       	andi	r24, 0x86	; 134
 48c:	59 f0       	breq	.+22     	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 48e:	a1 fe       	sbrs	r10, 1
 490:	02 c0       	rjmp	.+4      	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 492:	8b e2       	ldi	r24, 0x2B	; 43
 494:	01 c0       	rjmp	.+2      	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 496:	80 e2       	ldi	r24, 0x20	; 32
 498:	a7 fc       	sbrc	r10, 7
 49a:	8d e2       	ldi	r24, 0x2D	; 45
 49c:	b6 01       	movw	r22, r12
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 4a4:	4b 14       	cp	r4, r11
 4a6:	38 f4       	brcc	.+14     	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4a8:	b6 01       	movw	r22, r12
 4aa:	80 e3       	ldi	r24, 0x30	; 48
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 4b2:	ba 94       	dec	r11
 4b4:	f7 cf       	rjmp	.-18     	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 4b6:	4a 94       	dec	r4
 4b8:	e1 e0       	ldi	r30, 0x01	; 1
 4ba:	f0 e0       	ldi	r31, 0x00	; 0
 4bc:	ec 0f       	add	r30, r28
 4be:	fd 1f       	adc	r31, r29
 4c0:	e4 0d       	add	r30, r4
 4c2:	f1 1d       	adc	r31, r1
 4c4:	80 81       	ld	r24, Z
 4c6:	b6 01       	movw	r22, r12
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 4ce:	41 10       	cpse	r4, r1
 4d0:	f2 cf       	rjmp	.-28     	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4d2:	00 23       	and	r16, r16
 4d4:	09 f4       	brne	.+2      	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 4d6:	30 ce       	rjmp	.-928    	; 0x138 <vfprintf+0x5e>
 4d8:	b6 01       	movw	r22, r12
 4da:	80 e2       	ldi	r24, 0x20	; 32
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 4e2:	01 50       	subi	r16, 0x01	; 1
 4e4:	f6 cf       	rjmp	.-20     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4e6:	f6 01       	movw	r30, r12
 4e8:	87 81       	ldd	r24, Z+7	; 0x07
 4ea:	90 85       	ldd	r25, Z+8	; 0x08
 4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 4ee:	8f ef       	ldi	r24, 0xFF	; 255
 4f0:	9f ef       	ldi	r25, 0xFF	; 255
 4f2:	62 96       	adiw	r28, 0x12	; 18
 4f4:	0f b6       	in	r0, 0x3f	; 63
 4f6:	f8 94       	cli
 4f8:	de bf       	out	0x3e, r29	; 62
 4fa:	0f be       	out	0x3f, r0	; 63
 4fc:	cd bf       	out	0x3d, r28	; 61
 4fe:	df 91       	pop	r29
 500:	cf 91       	pop	r28
 502:	1f 91       	pop	r17
 504:	0f 91       	pop	r16
 506:	ff 90       	pop	r15
 508:	ef 90       	pop	r14
 50a:	df 90       	pop	r13
 50c:	cf 90       	pop	r12
 50e:	bf 90       	pop	r11
 510:	af 90       	pop	r10
 512:	9f 90       	pop	r9
 514:	8f 90       	pop	r8
 516:	7f 90       	pop	r7
 518:	6f 90       	pop	r6
 51a:	4f 90       	pop	r4
 51c:	3f 90       	pop	r3
 51e:	2f 90       	pop	r2
 520:	08 95       	ret

Disassembly of section .text.avrlibc:

00000ab6 <strnlen>:
 ab6:	cf 92       	push	r12
 ab8:	df 92       	push	r13
 aba:	ef 92       	push	r14
 abc:	6b 01       	movw	r12, r22
 abe:	e8 2e       	mov	r14, r24
 ac0:	a8 2f       	mov	r26, r24
 ac2:	cb 01       	movw	r24, r22
 ac4:	41 15       	cp	r20, r1
 ac6:	51 05       	cpc	r21, r1
 ac8:	31 f4       	brne	.+12     	; 0xad6 <strnlen+0x20>
 aca:	8c 19       	sub	r24, r12
 acc:	9d 09       	sbc	r25, r13
 ace:	ef 90       	pop	r14
 ad0:	df 90       	pop	r13
 ad2:	cf 90       	pop	r12
 ad4:	08 95       	ret
 ad6:	fc 01       	movw	r30, r24
 ad8:	24 91       	lpm	r18, Z
 ada:	a7 fd       	sbrc	r26, 7
 adc:	20 81       	ld	r18, Z
 ade:	22 23       	and	r18, r18
 ae0:	a1 f3       	breq	.-24     	; 0xaca <strnlen+0x14>
 ae2:	01 96       	adiw	r24, 0x01	; 1
 ae4:	a1 1d       	adc	r26, r1
 ae6:	41 50       	subi	r20, 0x01	; 1
 ae8:	51 09       	sbc	r21, r1
 aea:	ec cf       	rjmp	.-40     	; 0xac4 <strnlen+0xe>

Disassembly of section .text.avrlibc:

000008b4 <fputc>:
 8b4:	0f 93       	push	r16
 8b6:	1f 93       	push	r17
 8b8:	cf 93       	push	r28
 8ba:	df 93       	push	r29
 8bc:	fb 01       	movw	r30, r22
 8be:	24 81       	ldd	r18, Z+4	; 0x04
 8c0:	21 fd       	sbrc	r18, 1
 8c2:	03 c0       	rjmp	.+6      	; 0x8ca <fputc+0x16>
 8c4:	8f ef       	ldi	r24, 0xFF	; 255
 8c6:	9f ef       	ldi	r25, 0xFF	; 255
 8c8:	2c c0       	rjmp	.+88     	; 0x922 <__stack+0x23>
 8ca:	22 ff       	sbrs	r18, 2
 8cc:	16 c0       	rjmp	.+44     	; 0x8fa <fputc+0x46>
 8ce:	47 81       	ldd	r20, Z+7	; 0x07
 8d0:	50 85       	ldd	r21, Z+8	; 0x08
 8d2:	25 81       	ldd	r18, Z+5	; 0x05
 8d4:	36 81       	ldd	r19, Z+6	; 0x06
 8d6:	42 17       	cp	r20, r18
 8d8:	53 07       	cpc	r21, r19
 8da:	44 f4       	brge	.+16     	; 0x8ec <fputc+0x38>
 8dc:	a0 81       	ld	r26, Z
 8de:	b1 81       	ldd	r27, Z+1	; 0x01
 8e0:	9d 01       	movw	r18, r26
 8e2:	2f 5f       	subi	r18, 0xFF	; 255
 8e4:	3f 4f       	sbci	r19, 0xFF	; 255
 8e6:	31 83       	std	Z+1, r19	; 0x01
 8e8:	20 83       	st	Z, r18
 8ea:	8c 93       	st	X, r24
 8ec:	27 81       	ldd	r18, Z+7	; 0x07
 8ee:	30 85       	ldd	r19, Z+8	; 0x08
 8f0:	2f 5f       	subi	r18, 0xFF	; 255
 8f2:	3f 4f       	sbci	r19, 0xFF	; 255
 8f4:	30 87       	std	Z+8, r19	; 0x08
 8f6:	27 83       	std	Z+7, r18	; 0x07
 8f8:	14 c0       	rjmp	.+40     	; 0x922 <__stack+0x23>
 8fa:	8b 01       	movw	r16, r22
 8fc:	ec 01       	movw	r28, r24
 8fe:	fb 01       	movw	r30, r22
 900:	01 84       	ldd	r0, Z+9	; 0x09
 902:	f2 85       	ldd	r31, Z+10	; 0x0a
 904:	e0 2d       	mov	r30, r0
 906:	09 95       	icall
 908:	89 2b       	or	r24, r25
 90a:	e1 f6       	brne	.-72     	; 0x8c4 <fputc+0x10>
 90c:	d8 01       	movw	r26, r16
 90e:	17 96       	adiw	r26, 0x07	; 7
 910:	8d 91       	ld	r24, X+
 912:	9c 91       	ld	r25, X
 914:	18 97       	sbiw	r26, 0x08	; 8
 916:	01 96       	adiw	r24, 0x01	; 1
 918:	18 96       	adiw	r26, 0x08	; 8
 91a:	9c 93       	st	X, r25
 91c:	8e 93       	st	-X, r24
 91e:	17 97       	sbiw	r26, 0x07	; 7
 920:	ce 01       	movw	r24, r28
 922:	df 91       	pop	r29
 924:	cf 91       	pop	r28
 926:	1f 91       	pop	r17
 928:	0f 91       	pop	r16
 92a:	08 95       	ret

Disassembly of section .text.avrlibc:

000006c2 <__ultoa_invert>:
 6c2:	fa 01       	movw	r30, r20
 6c4:	aa 27       	eor	r26, r26
 6c6:	28 30       	cpi	r18, 0x08	; 8
 6c8:	51 f1       	breq	.+84     	; 0x71e <__ultoa_invert+0x5c>
 6ca:	20 31       	cpi	r18, 0x10	; 16
 6cc:	81 f1       	breq	.+96     	; 0x72e <__ultoa_invert+0x6c>
 6ce:	e8 94       	clt
 6d0:	6f 93       	push	r22
 6d2:	6e 7f       	andi	r22, 0xFE	; 254
 6d4:	6e 5f       	subi	r22, 0xFE	; 254
 6d6:	7f 4f       	sbci	r23, 0xFF	; 255
 6d8:	8f 4f       	sbci	r24, 0xFF	; 255
 6da:	9f 4f       	sbci	r25, 0xFF	; 255
 6dc:	af 4f       	sbci	r26, 0xFF	; 255
 6de:	b1 e0       	ldi	r27, 0x01	; 1
 6e0:	3e d0       	rcall	.+124    	; 0x75e <__ultoa_invert+0x9c>
 6e2:	b4 e0       	ldi	r27, 0x04	; 4
 6e4:	3c d0       	rcall	.+120    	; 0x75e <__ultoa_invert+0x9c>
 6e6:	67 0f       	add	r22, r23
 6e8:	78 1f       	adc	r23, r24
 6ea:	89 1f       	adc	r24, r25
 6ec:	9a 1f       	adc	r25, r26
 6ee:	a1 1d       	adc	r26, r1
 6f0:	68 0f       	add	r22, r24
 6f2:	79 1f       	adc	r23, r25
 6f4:	8a 1f       	adc	r24, r26
 6f6:	91 1d       	adc	r25, r1
 6f8:	a1 1d       	adc	r26, r1
 6fa:	6a 0f       	add	r22, r26
 6fc:	71 1d       	adc	r23, r1
 6fe:	81 1d       	adc	r24, r1
 700:	91 1d       	adc	r25, r1
 702:	a1 1d       	adc	r26, r1
 704:	20 d0       	rcall	.+64     	; 0x746 <__ultoa_invert+0x84>
 706:	09 f4       	brne	.+2      	; 0x70a <__ultoa_invert+0x48>
 708:	68 94       	set
 70a:	3f 91       	pop	r19
 70c:	2a e0       	ldi	r18, 0x0A	; 10
 70e:	26 9f       	mul	r18, r22
 710:	11 24       	eor	r1, r1
 712:	30 19       	sub	r19, r0
 714:	30 5d       	subi	r19, 0xD0	; 208
 716:	31 93       	st	Z+, r19
 718:	de f6       	brtc	.-74     	; 0x6d0 <__ultoa_invert+0xe>
 71a:	cf 01       	movw	r24, r30
 71c:	08 95       	ret
 71e:	46 2f       	mov	r20, r22
 720:	47 70       	andi	r20, 0x07	; 7
 722:	40 5d       	subi	r20, 0xD0	; 208
 724:	41 93       	st	Z+, r20
 726:	b3 e0       	ldi	r27, 0x03	; 3
 728:	0f d0       	rcall	.+30     	; 0x748 <__ultoa_invert+0x86>
 72a:	c9 f7       	brne	.-14     	; 0x71e <__ultoa_invert+0x5c>
 72c:	f6 cf       	rjmp	.-20     	; 0x71a <__ultoa_invert+0x58>
 72e:	46 2f       	mov	r20, r22
 730:	4f 70       	andi	r20, 0x0F	; 15
 732:	40 5d       	subi	r20, 0xD0	; 208
 734:	4a 33       	cpi	r20, 0x3A	; 58
 736:	18 f0       	brcs	.+6      	; 0x73e <__ultoa_invert+0x7c>
 738:	49 5d       	subi	r20, 0xD9	; 217
 73a:	31 fd       	sbrc	r19, 1
 73c:	40 52       	subi	r20, 0x20	; 32
 73e:	41 93       	st	Z+, r20
 740:	02 d0       	rcall	.+4      	; 0x746 <__ultoa_invert+0x84>
 742:	a9 f7       	brne	.-22     	; 0x72e <__ultoa_invert+0x6c>
 744:	ea cf       	rjmp	.-44     	; 0x71a <__ultoa_invert+0x58>
 746:	b4 e0       	ldi	r27, 0x04	; 4
 748:	a6 95       	lsr	r26
 74a:	97 95       	ror	r25
 74c:	87 95       	ror	r24
 74e:	77 95       	ror	r23
 750:	67 95       	ror	r22
 752:	ba 95       	dec	r27
 754:	c9 f7       	brne	.-14     	; 0x748 <__ultoa_invert+0x86>
 756:	00 97       	sbiw	r24, 0x00	; 0
 758:	61 05       	cpc	r22, r1
 75a:	71 05       	cpc	r23, r1
 75c:	08 95       	ret
 75e:	9b 01       	movw	r18, r22
 760:	ac 01       	movw	r20, r24
 762:	0a 2e       	mov	r0, r26
 764:	06 94       	lsr	r0
 766:	57 95       	ror	r21
 768:	47 95       	ror	r20
 76a:	37 95       	ror	r19
 76c:	27 95       	ror	r18
 76e:	ba 95       	dec	r27
 770:	c9 f7       	brne	.-14     	; 0x764 <__ultoa_invert+0xa2>
 772:	62 0f       	add	r22, r18
 774:	73 1f       	adc	r23, r19
 776:	84 1f       	adc	r24, r20
 778:	95 1f       	adc	r25, r21
 77a:	a0 1d       	adc	r26, r0
 77c:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

00000a12 <__prologue_saves__>:
 a12:	2f 92       	push	r2
 a14:	3f 92       	push	r3
 a16:	4f 92       	push	r4
 a18:	5f 92       	push	r5
 a1a:	6f 92       	push	r6
 a1c:	7f 92       	push	r7
 a1e:	8f 92       	push	r8
 a20:	9f 92       	push	r9
 a22:	af 92       	push	r10
 a24:	bf 92       	push	r11
 a26:	cf 92       	push	r12
 a28:	df 92       	push	r13
 a2a:	ef 92       	push	r14
 a2c:	ff 92       	push	r15
 a2e:	0f 93       	push	r16
 a30:	1f 93       	push	r17
 a32:	cf 93       	push	r28
 a34:	df 93       	push	r29
 a36:	cd b7       	in	r28, 0x3d	; 61
 a38:	de b7       	in	r29, 0x3e	; 62
 a3a:	ca 1b       	sub	r28, r26
 a3c:	db 0b       	sbc	r29, r27
 a3e:	0f b6       	in	r0, 0x3f	; 63
 a40:	f8 94       	cli
 a42:	de bf       	out	0x3e, r29	; 62
 a44:	0f be       	out	0x3f, r0	; 63
 a46:	cd bf       	out	0x3d, r28	; 61
 a48:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00000aec <__epilogue_restores__>:
 aec:	2a 88       	ldd	r2, Y+18	; 0x12
 aee:	39 88       	ldd	r3, Y+17	; 0x11
 af0:	48 88       	ldd	r4, Y+16	; 0x10
 af2:	5f 84       	ldd	r5, Y+15	; 0x0f
 af4:	6e 84       	ldd	r6, Y+14	; 0x0e
 af6:	7d 84       	ldd	r7, Y+13	; 0x0d
 af8:	8c 84       	ldd	r8, Y+12	; 0x0c
 afa:	9b 84       	ldd	r9, Y+11	; 0x0b
 afc:	aa 84       	ldd	r10, Y+10	; 0x0a
 afe:	b9 84       	ldd	r11, Y+9	; 0x09
 b00:	c8 84       	ldd	r12, Y+8	; 0x08
 b02:	df 80       	ldd	r13, Y+7	; 0x07
 b04:	ee 80       	ldd	r14, Y+6	; 0x06
 b06:	fd 80       	ldd	r15, Y+5	; 0x05
 b08:	0c 81       	ldd	r16, Y+4	; 0x04
 b0a:	1b 81       	ldd	r17, Y+3	; 0x03
 b0c:	aa 81       	ldd	r26, Y+2	; 0x02
 b0e:	b9 81       	ldd	r27, Y+1	; 0x01
 b10:	ce 0f       	add	r28, r30
 b12:	d1 1d       	adc	r29, r1
 b14:	0f b6       	in	r0, 0x3f	; 63
 b16:	f8 94       	cli
 b18:	de bf       	out	0x3e, r29	; 62
 b1a:	0f be       	out	0x3f, r0	; 63
 b1c:	cd bf       	out	0x3d, r28	; 61
 b1e:	ed 01       	movw	r28, r26
 b20:	08 95       	ret
